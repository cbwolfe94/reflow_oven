# name of executable

ELF = main.elf
HEX = main.hex
BIN = main.bin

# Tool path

TOOLROOT = /bin

# Library path

LIBROOT = /home/conner/Documents/Projects/STM32/STM32F10x/STM32F10x_Standard_Peripheral_Library

# Tools

CC=$(TOOLROOT)/arm-none-eabi-gcc
LD=$(TOOLROOT)/arm-none-eabi-gcc
AR=$(TOOLROOT)/arm-none-eabi-ar
AS=$(TOOLROOT)/arm-none-eabi-as
OBJC=$(TOOLROOT)/arm-none-eabi-objcopy

# Code Paths

DEVICE=$(LIBROOT)/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/
CORE=$(LIBROOT)/Libraries/CMSIS/CM3/CoreSupport/
PERIPH=$(LIBROOT)/Libraries/STM32F10x_StdPeriph_Driver

# Search path for standard files

vpath %.c $(TEMPLATEROOT)

# Search path for peripheral library

vpath %.c $(CORE)
vpath %.c $(PERIPH)/src
vpath %.c $(DEVICE)

#  Processor specific

PTYPE = STM32F10X_MD_VL 
LDSCRIPT = $(TEMPLATEROOT)/stm32f100.ld
STARTUP = startup_stm32f10x.o system_stm32f10x.o 

# Compilation Flags

FULLASSERT = -DUSE_FULL_ASSERT 

LDFLAGS+= -T$(LDSCRIPT) -mthumb -mcpu=cortex-m3 
CFLAGS+= -mcpu=cortex-m3 -mthumb 
CFLAGS+= -I$(TEMPLATEROOT) -I$(DEVICE) -I$(CORE) -I$(PERIPH)/inc -I.
CFLAGS+= -D$(PTYPE) -DUSE_STDPERIPH_DRIVER $(FULLASSERT)

# Build executable 
all: $(ELF) $(HEX) $(BIN)

$(BIN):
	$(OBJC) -O binary $(ELF) $(BIN)

$(HEX): 
	$(OBJC) -O ihex $(ELF) $(HEX)

$(ELF) : $(OBJS)
	$(LD) $(LDFLAGS) -o $@ $(OBJS)

# compile and generate dependency info

%.o: %.c
	$(CC) -c $(CFLAGS) $< -o $@
	$(CC) -MM $(CFLAGS) $< > $*.d

%.o: %.s
	$(CC) -c $(CFLAGS) $< -o $@

clean:
	rm -f $(OBJS) $(OBJS:.o=.d) $(ELF) startup_stm32f* $(CLEANOTHER) $(HEX) $(BIN)

debug: $(ELF)
	arm-none-eabi-gdb $(ELF)

flash:
	st-flash erase
	st-flash write $(BIN) 0x8000000


# pull in dependencies

-include $(OBJS:.o=.d)